{"ast":null,"code":"import _toConsumableArray from \"/vagrant/toDoListApp/client/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/vagrant/toDoListApp/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/vagrant/toDoListApp/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/vagrant/toDoListApp/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/vagrant/toDoListApp/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/vagrant/toDoListApp/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _taggedTemplateLiteral from \"/vagrant/toDoListApp/client/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"/vagrant/toDoListApp/client/src/App.js\",\n    _this2 = this;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n{\\n  todos{\\n    id\\n    text\\n    complete\\n  }\\n}\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from 'react';\nimport gql from \"graphql-tag\";\nimport { graphql } from 'react-apollo';\nimport Paper from '@material-ui/core/Paper';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport CommentIcon from '@material-ui/icons/Comment';\nvar TodosQuery = gql(_templateObject());\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      checked: [0]\n    };\n\n    _this.handleToggle = function (value) {\n      return function () {\n        var checked = _this.state.checked;\n        var currentIndex = checked.indexOf(value);\n\n        var newChecked = _toConsumableArray(checked);\n\n        if (currentIndex === -1) {\n          newChecked.push(value);\n        } else {\n          newChecked.splice(currentIndex, 1);\n        }\n\n        _this.setState({\n          checked: newChecked\n        });\n      };\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props$data = this.props.data,\n          loading = _this$props$data.loading,\n          todos = _this$props$data.todos;\n\n      if (loading) {\n        return null;\n      }\n\n      return React.createElement(\"div\", {\n        style: {\n          display: \"flex\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {\n          margin: \"auto\",\n          width: 400\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(Paper, {\n        elevation: 1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, todos.map(function (todo) {\n        return React.createElement(\"div\", {\n          key: \"\".concat(todo.id, \"-todo-item\"),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55\n          },\n          __self: this\n        }, todo.text);\n      }))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nReact.createElement(List, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 63\n  },\n  __self: this\n}, [0, 1, 2, 3].map(function (value) {\n  return React.createElement(ListItem, {\n    key: value,\n    role: undefined,\n    dense: true,\n    button: true,\n    onClick: _this2.handleToggle(value),\n    className: classes.listItem,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(Checkbox, {\n    checked: _this2.state.checked.indexOf(value) !== -1,\n    tabIndex: -1,\n    disableRipple: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }), React.createElement(ListItemText, {\n    primary: \"Line item \".concat(value + 1),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }), React.createElement(ListItemSecondaryAction, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    \"aria-label\": \"Comments\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, React.createElement(CommentIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }))));\n}));\nexport default graphql(TodosQuery)(App);","map":{"version":3,"sources":["/vagrant/toDoListApp/client/src/App.js"],"names":["React","Component","gql","graphql","Paper","List","ListItem","ListItemSecondaryAction","ListItemText","Checkbox","IconButton","CommentIcon","TodosQuery","App","state","checked","handleToggle","value","currentIndex","indexOf","newChecked","push","splice","setState","props","data","loading","todos","display","margin","width","map","todo","id","text","undefined","classes","listItem"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport gql from \"graphql-tag\";\nimport {graphql} from 'react-apollo';\nimport Paper from '@material-ui/core/Paper';\n\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport CommentIcon from '@material-ui/icons/Comment';\n\nconst TodosQuery = gql`\n{\n  todos{\n    id\n    text\n    complete\n  }\n}\n`;\n\nclass App extends Component {\n  state = {\n    checked: [0],\n  };\n\n  handleToggle = value => () => {\n    const { checked } = this.state;\n    const currentIndex = checked.indexOf(value);\n    const newChecked = [...checked];\n\n    if (currentIndex === -1) {\n      newChecked.push(value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n\n    this.setState({\n      checked: newChecked,\n    });\n  };\n\n  render() {\n    const {data: {loading, todos} } = this.props;\n    if(loading){\n      return null;\n    }\n\n    return (\n    <div style={{ display: \"flex\"}}>\n      <div style={{ margin: \"auto\", width: 400 }} >\n      <Paper elevation={1}>\n    {todos.map(todo => <div key={`${todo.id}-todo-item`}>{todo.text}</div>)}\n      </Paper>\n      </div>\n    </div>\n    );\n  }\n}\n\n        <List>\n          {[0, 1, 2, 3].map(value => (\n            <ListItem\n              key={value}\n              role={undefined}\n              dense\n              button\n              onClick={this.handleToggle(value)}\n              className={classes.listItem}\n            >\n              <Checkbox\n                checked={this.state.checked.indexOf(value) !== -1}\n                tabIndex={-1}\n                disableRipple\n              />\n              <ListItemText primary={`Line item ${value + 1}`} />\n              <ListItemSecondaryAction>\n                <IconButton aria-label=\"Comments\">\n                  <CommentIcon />\n                </IconButton>\n              </ListItemSecondaryAction>\n            </ListItem>\n          ))}\n        </List>\n\nexport default graphql(TodosQuery)(App);\n"]},"metadata":{},"sourceType":"module"}